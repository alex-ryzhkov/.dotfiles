.df() {
    file_to_edit="$(find $DOTFILES -type f -not -path '*/\.git/*' | fzf)"
    result=$?
    if [ $result -eq 0 ]; then
        $EDITOR $file_to_edit
    fi
}

.sc() {
    file_to_edit="$(find ~/.scripts -type f -not -path '*/\.git/*' | fzf)"
    result=$?
    if [ $result -eq 0 ]; then
        $EDITOR $file_to_edit
    fi
}

lsg() {
    keyword=$(echo "$@" |  sed 's/ /.*/g')
    ls -hlA --color=yes \
    | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(" %0o ",k);print}' \
    | grep -iE $keyword
}

# Run tmux by default when terminal is opened
run_tmux() {
    if [[ $DISPLAY ]]; then
        # If not running interactively, do not do anything
        [[ $- != *i* ]] && return
        [[ -z "$TMUX" ]] && exec tmux
    fi
}

ts() {
    if [ $# -eq 0 ]; then
        $MYTERM -e "tmux new-session"
    elif [ $# -eq 1 ]; then
        $MYTERM -e "tmux new-session -s $1"
    else
        echo ".zshrc ts(): Too many arguments"
    fi
}

ta() {
    if [ $# -eq 0 ]; then
        echo ".zsh_functions ta(): Specify a tmux session name to attach to"
    elif [ $# -eq 1 ]; then
        $MYTERM -e "tmux attach -t $1"
    else
        echo ".zsh_functions ta(): Too many arguments"
    fi
}

ss() {
    #enable passing options
    while getopts ":v" opt; do
        case ${opt} in
            v) #verbose
                ssh -vvv -A `grep -i 'host ' ~/.ssh/config | awk '{print $2}' | fzf`
            ;;
        esac
    done
    if [ $OPTIND -eq 1 ]; then
        HOST=$(grep -i 'host ' ~/.ssh/config | awk '{print $2}' | fzf)
        #change tmux windowname to hostname of current machine we connected to
        if [ "z" != "z$TMUX" ]; then
            tmux rename-window $HOST
        fi
        ssh -A $HOST 2>/dev/null
        if [ "z" != "z$TMUX" ]; then
            tmux rename-window $(hostname)
        fi
    fi
}

sf() {
    sftp `grep -i 'host ' ~/.ssh/config | awk '{print $2}' | fzf` 2>/dev/null
}

#change tmux windowname to hostname of current machine we connected to
if [ "z" != "z$TMUX" ]; then
  function ssh_tmux
  {
    tmux rename-window $1
    ssh -q "$@"
    tmux rename-window `hostname`
  }
  alias ssh='ssh_tmux'
else
  alias ssh='ssh -q'
fi

html2pdf() {
    if [[ $# -eq 0 ]]; then
        echo "usage: html2pdf <url> <filename>"
    else
        chromium --headless --disable-gpu --print-to-pdf="${2}".pdf "${1}"
    fi
}

fkill () {
	local pid
	if [ "$UID" != "0" ]
	then
		pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
	else
		pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
	fi
	if [ "x$pid" != "x" ]
	then
		echo $pid | xargs kill -${1:-9}
	fi
}

