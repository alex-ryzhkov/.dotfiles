set -g prefix M-o
bind M-o send-prefix

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on

# Split window
bind | split-window -h
bind \\ split-window -v

# Seamless navigation between tmux and vim splits
bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# Resize panes
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

    # Edit values if you use custom resize_count variables
    bind-key -n M-Left if-shell "$is_vim" "send-keys Left"  "resize-pane -L 10"
    bind-key -n M-Down if-shell "$is_vim" "send-keys Down"  "resize-pane -D 5"
    bind-key -n M-Up if-shell "$is_vim" "send-keys Up"  "resize-pane -U 5"
    bind-key -n M-Right if-shell "$is_vim" "send-keys Right"  "resize-pane -R 10"

    bind-key -T copy-mode-vi M-h resize-pane -L 10
    bind-key -T copy-mode-vi M-j resize-pane -D 5
    bind-key -T copy-mode-vi M-k resize-pane -U 5
    bind-key -T copy-mode-vi M-l resize-pane -R 10

# It's time to deal with those panes/windows!
bind-key -n M-x confirm-before "kill-pane"
bind-key -n M-X confirm-before "kill-window"

bind-key -n M-R command-prompt -I "" "rename-window '%%'"

bind p paste-buffer

# Comfy selection and copy, M-o, p to paste
bind-key Escape copy-mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -b"
bind-key p run "xsel -o -b | tmux load-buffer - ; tmux paste-buffer"
# Comfy selection and copy with mouse
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xsel -i -b"
# use mouse
set -g mouse on

# Reload config file dynamically
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

#-------- Statusbar {{{
#------------------------------------------------------
# stuff for the statusbar broken down into right, left and center

# UTF-8 character support in the status bar
# set-option -g status-utf8 on

# refresh the status bar every 1 second.
set-option -g status-interval 1

# Time messages remain in the status bar. Lower this number
# if this is too distracting.
set-option -g display-time 4000

# command/message line colors
set-option -g message-style fg=white,bg=black,bright

# CENTER {{{
# Symbol    Meaning ================================
#      *    Denotes the current window.
#      -    Marks the last window (previously selected).
#      #    Window is monitored and activity has been detected.
#      !    A bell has occurred in the window.
#      ~    The window has been silent for the monitor-silence interval.
#      M    The window contains the marked pane.
#      Z    The window's active pane is zoomed.

# monitor changes on non-focus window (activity symbol = #)
# (e.g 1:zsh  2:zsh  3:torr# 4:im- 5:chat# 6:fm# 7:conf*)
set-window-option -g monitor-activity on

# displays a message at the bottom when activity is detected (e.g Activity in Window 5)
# requires: monitor-activity on
# set-option -g visual-activity off

# bell colors (bell symbol = !)
# to simulate a bell alert use: sleep 3 && echo -e "\a"
set-window-option -g window-status-bell-style 'fg=black,bg=colour5,bright'

# statusbar colors
set-option -g status-style fg=white,bg=black,default

# window title colors; non active
set-window-option -g window-status-style fg=cyan,bg=default,dim

# window title colors; active
set-window-option -g window-status-current-style fg=white,bg=blue,bright

#}}}
# LEFT SIDE {{{
set-option -g status-justify centre
set-option -g status-left-length 40
set-option -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"

#}}}
# RIGHT SIDE {{{
# show host name (see man tmux#FORMATS for other options)
set-option -g status-right "#[fg=cyan]#H #{pane_mode}"

#}}}

#}}}

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @tpm_plugins "                 \
  tmux-plugins/tpm                    \
    soyuka/tmux-current-pane-hostname     \
"
set -g @plugin 'alex-ryzhkov/tmux-tilish'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager(keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# Smart pane resizing with awareness of Vim splits.
# See: https://github.com/RyanMillerC/better-vim-tmux-resizer

# vim:foldmethod=marker:foldlevel=0
